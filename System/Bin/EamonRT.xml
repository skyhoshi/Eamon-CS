<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EamonRT</name>
    </assembly>
    <members>
        <member name="T:EamonRT.Framework.Combat.ICombatSystem">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Combat.ICombatSystem.SetNextStateFunc">
            <summary>
            Gets or sets the function used to set the <see cref="P:EamonRT.Framework.States.IStateSignatures.NextState">NextState</see> property of the Eamon CS
            game engine's current <see cref="T:EamonRT.Framework.States.IState">State</see> or <see cref="T:EamonRT.Framework.Commands.ICommand">Command</see>.
            </summary>
        </member>
        <member name="P:EamonRT.Framework.Combat.ICombatSystem.OfMonster">
            <summary>
            Gets or sets the offending (attacking) <see cref="T:Eamon.Framework.IMonster">Monster</see> for this <see cref="T:EamonRT.Framework.Combat.ICombatSystem">CombatSystem</see>.
            </summary>
        </member>
        <member name="P:EamonRT.Framework.Combat.ICombatSystem.DfMonster">
            <summary>
            Gets or sets the defending <see cref="T:Eamon.Framework.IMonster">Monster</see> for this <see cref="T:EamonRT.Framework.Combat.ICombatSystem">CombatSystem</see>.
            </summary>
        </member>
        <member name="P:EamonRT.Framework.Combat.ICombatSystem.MemberNumber">
            <summary>
            Gets or sets which member of <see cref="P:EamonRT.Framework.Combat.ICombatSystem.OfMonster">OfMonster</see>'s group is attacking (always 1 for single <see cref="T:Eamon.Framework.IMonster">Monster</see>s).
            </summary>
        </member>
        <member name="P:EamonRT.Framework.Combat.ICombatSystem.AttackNumber">
            <summary>
            Gets or sets which attack number the <see cref="P:EamonRT.Framework.Combat.ICombatSystem.OfMonster">OfMonster</see>'s <see cref="P:EamonRT.Framework.Combat.ICombatSystem.MemberNumber">group member</see> is performing (may
            be >= 1 based on <see cref="P:Eamon.Framework.IMonster.AttackCount">AttackCount</see>).
            </summary>
        </member>
        <member name="P:EamonRT.Framework.Combat.ICombatSystem.BlastSpell">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:EamonRT.Framework.Combat.ICombatSystem">CombatSystem</see> was created to inflict <see cref="F:Eamon.Framework.Primitive.Enums.Spell.Blast">Blast</see>
            spell damage.
            </summary>
        </member>
        <member name="P:EamonRT.Framework.Combat.ICombatSystem.UseAttacks">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:EamonRT.Framework.Combat.ICombatSystem">CombatSystem</see> should use "attacks" in its combat description.
            </summary>
        </member>
        <member name="P:EamonRT.Framework.Combat.ICombatSystem.MaxDamage">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:EamonRT.Framework.Combat.ICombatSystem">CombatSystem</see> always calculates initial damage done to be the maximum allowed.
            </summary>
            <remarks>
            When this is <c>true</c> initial damage done is set to (D*S) where D=Dice and S=Sides.
            </remarks>
        </member>
        <member name="P:EamonRT.Framework.Combat.ICombatSystem.OmitArmor">
            <summary>
            Gets or sets a value indicating whether <see cref="P:EamonRT.Framework.Combat.ICombatSystem.DfMonster">DfMonster</see>'s armor should be omitted from damage calculations.
            </summary>
        </member>
        <member name="P:EamonRT.Framework.Combat.ICombatSystem.OmitSkillGains">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:EamonRT.Framework.Combat.ICombatSystem">CombatSystem</see> should omit skill gains if the player
            character's attack is successful.
            </summary>
        </member>
        <member name="P:EamonRT.Framework.Combat.ICombatSystem.OmitMonsterStatus">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:EamonRT.Framework.Combat.ICombatSystem">CombatSystem</see> should omit printing <see cref="P:EamonRT.Framework.Combat.ICombatSystem.DfMonster">DfMonster</see>'s
            health status after damage is calculated.
            </summary>
        </member>
        <member name="P:EamonRT.Framework.Combat.ICombatSystem.OmitFinalNewLine">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:EamonRT.Framework.Combat.ICombatSystem">CombatSystem</see> should print a final newline after
            processing completes.
            </summary>
        </member>
        <member name="P:EamonRT.Framework.Combat.ICombatSystem.FixedResult">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Combat.ICombatSystem.WeaponRevealType">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Combat.ICombatSystem.ExecuteCalculateDamage(System.Int64,System.Int64,System.Int64)">
            <summary></summary>
            <param name="numDice"></param>
            <param name="numSides"></param>
            <param name="mod"></param>
        </member>
        <member name="M:EamonRT.Framework.Combat.ICombatSystem.ExecuteCheckMonsterStatus">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Combat.ICombatSystem.ExecuteAttack">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.ICommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.ICommandImpl">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ICommandImpl.Command">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandImpl.ShouldPreTurnProcess">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandImpl.Execute">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.ICommandSignatures">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ICommandSignatures.CommandParser">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ICommandSignatures.ActorMonster">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ICommandSignatures.ActorRoom">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ICommandSignatures.Dobj">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ICommandSignatures.DobjArtifact">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ICommandSignatures.DobjMonster">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ICommandSignatures.Iobj">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ICommandSignatures.IobjArtifact">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ICommandSignatures.IobjMonster">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ICommandSignatures.Synonyms">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ICommandSignatures.SortOrder">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ICommandSignatures.Verb">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ICommandSignatures.Prep">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ICommandSignatures.Type">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ICommandSignatures.ContainerType">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ICommandSignatures.GetCommandCalled">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ICommandSignatures.IsNew">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ICommandSignatures.IsListed">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ICommandSignatures.IsSentenceParserEnabled">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ICommandSignatures.IsDobjPrepEnabled">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ICommandSignatures.IsIobjEnabled">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ICommandSignatures.IsDarkEnabled">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ICommandSignatures.IsPlayerEnabled">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ICommandSignatures.IsMonsterEnabled">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintCantVerbObj(Eamon.Framework.IGameBase)">
            <summary></summary>
            <param name="obj"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintCantVerbIt(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintCantVerbThat(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintDoYouMeanObj1OrObj2(Eamon.Framework.IGameBase,Eamon.Framework.IGameBase)">
            <summary></summary>
            <param name="obj1"></param>
            <param name="obj2"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintWhyAttack(Eamon.Framework.IGameBase)">
            <summary></summary>
            <param name="obj"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintTakingFirst(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintRemovingFirst(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintBestLeftAlone(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintTooHeavy(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintMustBeFreed(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintMustFirstOpen(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintMustFirstClose(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintWorn(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintRemoved(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintOpened(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintClosed(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintReceived(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintRetrieved(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintTaken(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintDropped(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintNotOpen(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintAlreadyOpen(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintWontOpen(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintWontFit(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintFull(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintOutOfSpace(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintLocked(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintBrokeIt(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintAlreadyBrokeIt(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintHaveToForceOpen(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintWearingRemoveFirst(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintWearingRemoveFirst01(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintCantWearShieldWithWeapon(Eamon.Framework.IArtifact,Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="shield"></param>
            <param name="weapon"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintContainerNotEmpty(Eamon.Framework.IArtifact,Eamon.Framework.Primitive.Enums.ContainerType,System.Boolean)">
            <summary></summary>
            <param name="artifact"></param>
            <param name="containerType"></param>
            <param name="isPlural"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintVerbItAll(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintNoneLeft(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintOkay(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintFeelBetter(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintFeelWorse(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintTryDifferentCommand(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintNotWeapon(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintNotReadyableWeapon(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintNotWhileCarryingObj(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintNotWhileWearingObj(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintWontLight(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintLightObj(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintLightExtinguished(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintCantReadyWeaponWithShield(Eamon.Framework.IArtifact,Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="weapon"></param>
            <param name="shield"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintPolitelyRefuses(Eamon.Framework.IMonster)">
            <summary></summary>
            <param name="monster"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintGiveObjToActor(Eamon.Framework.IArtifact,Eamon.Framework.IMonster)">
            <summary></summary>
            <param name="artifact"></param>
            <param name="monster"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintObjBelongsToActor(Eamon.Framework.IArtifact,Eamon.Framework.IMonster)">
            <summary></summary>
            <param name="artifact"></param>
            <param name="monster"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintOpenObjWithKey(Eamon.Framework.IArtifact,Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
            <param name="key"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintNotEnoughGold">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintMustFirstReadyWeapon">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintDontHaveItNotHere">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintDontHaveIt">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintDontNeedTo">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintCantDoThat">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintCantVerbThat">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintCantVerbHere">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintBeMoreSpecific">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintNobodyHereByThatName">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintNothingHereByThatName">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintYouSeeNothingSpecial">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintDontBeAbsurd">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintCalmDown">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PrintNoPlaceToGo">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PlayerProcessEvents(EamonRT.Framework.Primitive.Enums.EventType)">
            <summary></summary>
            <param name="eventType"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.MonsterProcessEvents(EamonRT.Framework.Primitive.Enums.EventType)">
            <summary></summary>
            <param name="eventType"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.PlayerExecute">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.MonsterExecute">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.IsAllowedInRoom">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.ShouldAllowSkillGains">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.ShouldShowUnseenArtifacts(Eamon.Framework.IRoom,Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="room"></param>
            <param name="artifact"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.GetPrintedVerb">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.IsEnabled(Eamon.Framework.IMonster)">
            <summary></summary>
            <param name="monster"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.IsPrepEnabled(Eamon.Framework.Primitive.Classes.IPrep)">
            <summary></summary>
            <param name="prep"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.CopyCommandData(EamonRT.Framework.Commands.ICommand,System.Boolean)">
            <summary></summary>
            <param name="destCommand"></param>
            <param name="includeIobj"></param>
        </member>
        <member name="M:EamonRT.Framework.Commands.ICommandSignatures.RedirectToGetCommand``1(Eamon.Framework.IArtifact,System.Boolean)">
            <summary></summary>
            <param name="artifact"></param>
            <param name="printTaking"></param>
        </member>
        <member name="T:EamonRT.Framework.Commands.IAttackCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.IAttackCommand.BlastSpell">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.IAttackCommand.CheckAttack">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.IAttackCommand.MemberNumber">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.IAttackCommand.AttackNumber">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IBlastCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.IBlastCommand.CastSpell">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.IBlastCommand.CheckAttack">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IFreeCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IGiveCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.IGiveCommand.GoldAmount">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IHealCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.IHealCommand.CastSpell">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IRequestCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.ISmileCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IWaveCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.ICloseCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IDrinkCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IDropCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.IDropCommand.DropAll">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IEatCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IExamineCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IGetCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.IGetCommand.GetAll">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.ILightCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IOpenCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IPutCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IReadCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IReadyCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.IReadyCommand.ArtTypes">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IRemoveCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IUseCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.IUseCommand.ArtTypes">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IWearCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IHintsCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IInfoCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IInventoryCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.IInventoryCommand.AllowExtendedContainers">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.ILookCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IPowerCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.IPowerCommand.CastSpell">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.IPowerCommand.ResurrectWhereClauseFuncs">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.IPowerCommand.VanishWhereClauseFuncs">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IQuitCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.IQuitCommand.GoToMainHall">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IRestoreCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.IRestoreCommand.SaveSlot">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.ISaveCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ISaveCommand.SaveSlot">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ISaveCommand.SaveName">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.ISayCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ISayCommand.OriginalPhrase">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ISayCommand.PrintedPhrase">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ISayCommand.ProcessedPhrase">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.ISettingsCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ISettingsCommand.VerboseRooms">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ISettingsCommand.VerboseMonsters">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ISettingsCommand.VerboseArtifacts">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ISettingsCommand.MatureContent">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ISettingsCommand.EnhancedParser">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ISettingsCommand.ShowPronounChanges">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ISettingsCommand.ShowFulfillMessages">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ISettingsCommand.PauseCombatMs">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Commands.ISettingsCommand.PrintUsage">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.ISpeedCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.ISpeedCommand.CastSpell">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IStatusCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IDownCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IEastCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IFleeCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Commands.IFleeCommand.Direction">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IGoCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IInCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.INeCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.INorthCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.INwCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IOutCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.ISeCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.ISouthCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.ISwCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IUpCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Commands.IWestCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.IEngine">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.IEngine.StartRoom">
            <summary>
            Gets or sets the <see cref="T:Eamon.Framework.IRoom">Room</see><see cref="P:Eamon.Framework.IGameBase.Uid"> Uid</see> of the player character's initial location at
            the beginning of the game.
            </summary>
        </member>
        <member name="P:EamonRT.Framework.IEngine.NumSaveSlots">
            <summary>
            Gets or sets the number of Saved Game slots available for use in the game.
            </summary>
        </member>
        <member name="P:EamonRT.Framework.IEngine.ScaledHardinessUnarmedMaxDamage">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.IEngine.ScaledHardinessMaxDamageDivisor">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.IEngine.EnforceMonsterWeightLimits">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.IEngine.UseMonsterScaledHardinessValues">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.IEngine.AutoDisplayUnseenArtifactDescs">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.IEngine.ExposeContainersRecursively">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.IEngine.PoundCharPolicy">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.IEngine.PercentCharPolicy">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.IEngine.PrintPlayerRoom">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.IEngine.PrintMonsterAlive(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.PrintLightOut(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.WeaponPowerCompare(Eamon.Framework.IArtifact,Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact1"></param>
            <param name="artifact2"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.IEngine.WeaponPowerCompare(System.Int64,System.Int64)">
            <summary></summary>
            <param name="artifactUid1"></param>
            <param name="artifactUid2"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.IEngine.GetMostPowerfulWeapon(System.Collections.Generic.IList{Eamon.Framework.IArtifact})">
            <summary></summary>
            <param name="artifactList"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.IEngine.GetMostPowerfulWeaponUid(System.Collections.Generic.IList{Eamon.Framework.IArtifact})">
            <summary></summary>
            <param name="artifactList"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.IEngine.EnforceCharacterWeightLimits">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.IEngine.AddUniqueCharsToArtifactAndMonsterNames">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.IEngine.AddMissingDescs">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.IEngine.InitSaArray">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.IEngine.CreateCommands">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.IEngine.InitArtifacts">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.IEngine.InitMonsters">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.IEngine.InitMonsterScaledHardinessValues">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.IEngine.ConvertWeaponToArtifact(Eamon.Framework.Primitive.Classes.ICharacterArtifact)">
            <summary></summary>
            <param name="weapon"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.IEngine.ConvertArtifactToWeapon(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.IEngine.ConvertArtifactToMonster(Eamon.Framework.IArtifact,System.Action{Eamon.Framework.IMonster},System.Boolean)">
            <summary></summary>
            <param name="artifact"></param>
            <param name="initialize"></param>
            <param name="addToDatabase"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.IEngine.ConvertCharacterToMonster">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.IEngine.ConvertMonsterToCharacter(Eamon.Framework.IMonster,System.Collections.Generic.IList{Eamon.Framework.IArtifact})">
            <summary></summary>
            <param name="monster"></param>
            <param name="weaponList"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.ResetMonsterStats(Eamon.Framework.IMonster)">
            <summary></summary>
            <param name="monster"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.SetArmorClass">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.IEngine.ConvertToCarriedInventory(System.Collections.Generic.IList{Eamon.Framework.IArtifact})">
            <summary></summary>
            <param name="weaponList"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.SellExcessWeapons(System.Collections.Generic.IList{Eamon.Framework.IArtifact})">
            <summary></summary>
            <param name="weaponList"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.SellInventoryToMerchant(System.Boolean)">
            <summary></summary>
            <param name="sellInventory"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.DeadMenu(Eamon.Framework.IMonster,System.Boolean,System.Boolean@)">
            <summary></summary>
            <param name="monster"></param>
            <param name="printLineSep"></param>
            <param name="restoreGame"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.LightOut(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.MonsterGetsAggravated(Eamon.Framework.IMonster,System.Boolean)">
            <summary></summary>
            <param name="monster"></param>
            <param name="printFinalNewLine"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.MonsterEmotes(Eamon.Framework.IMonster,System.Boolean)">
            <summary></summary>
            <param name="monster"></param>
            <param name="friendSmile"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.MonsterDies(Eamon.Framework.IMonster,Eamon.Framework.IMonster)">
            <summary></summary>
            <param name="OfMonster"></param>
            <param name="DfMonster"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.ProcessMonsterDeathEvents(Eamon.Framework.IMonster)">
            <summary></summary>
            <param name="monster"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.RevealDisguisedMonster(Eamon.Framework.IRoom,Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="room"></param>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.RevealEmbeddedArtifact(Eamon.Framework.IRoom,Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="room"></param>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.RevealContainerContents(Eamon.Framework.IRoom,System.Int64,Eamon.Framework.Primitive.Enums.ContainerType[],System.Collections.Generic.IList{System.String})">
            <summary></summary>
            <param name="room"></param>
            <param name="revealContentListIndex"></param>
            <param name="containerTypes"></param>
            <param name="containerContentsList"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.GetBlockedDirectionArtifact(System.Int64,System.Int64,Eamon.Framework.Primitive.Enums.Direction)">
            <summary></summary>
            <param name="ro"></param>
            <param name="r2"></param>
            <param name="dir"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.IEngine.GetCommandUsingToken(Eamon.Framework.IMonster,System.String,System.Boolean,System.Boolean)">
            <summary></summary>
            <param name="monster"></param>
            <param name="token"></param>
            <param name="synonymMatch"></param>
            <param name="partialMatch"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.IEngine.CheckDoor(Eamon.Framework.IRoom,Eamon.Framework.IArtifact,System.Boolean@,System.Int64@)">
            <summary></summary>
            <param name="room"></param>
            <param name="artifact"></param>
            <param name="found"></param>
            <param name="roomUid"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.CheckNumberOfExits(Eamon.Framework.IRoom,Eamon.Framework.IMonster,System.Boolean,System.Int64@)">
            <summary></summary>
            <param name="room"></param>
            <param name="monster"></param>
            <param name="fleeing"></param>
            <param name="numExits"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.GetRandomMoveDirection(Eamon.Framework.IRoom,Eamon.Framework.IMonster,System.Boolean,Eamon.Framework.Primitive.Enums.Direction@,System.Boolean@,System.Int64@)">
            <summary></summary>
            <param name="room"></param>
            <param name="monster"></param>
            <param name="fleeing"></param>
            <param name="direction"></param>
            <param name="found"></param>
            <param name="roomUid"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.GetRandomMoveDirection(Eamon.Framework.IRoom,Eamon.Framework.IMonster,System.Boolean,Eamon.Framework.Primitive.Enums.Direction@)">
            <summary></summary>
            <param name="room"></param>
            <param name="monster"></param>
            <param name="fleeing"></param>
            <param name="direction"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.MoveMonsterToRandomAdjacentRoom(Eamon.Framework.IRoom,Eamon.Framework.IMonster,System.Boolean,System.Boolean,System.Boolean)">
            <summary></summary>
            <param name="room"></param>
            <param name="monster"></param>
            <param name="fleeing"></param>
            <param name="callSleep"></param>
            <param name="printOutput"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.GetRandomMonsterList(System.Int64,System.Func{Eamon.Framework.IMonster,System.Boolean}[])">
            <summary></summary>
            <param name="numMonsters"></param>
            <param name="whereClauseFuncs"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.IEngine.FilterRecordList(System.Collections.Generic.IList{Eamon.Framework.IGameBase},System.String)">
            <summary></summary>
            <param name="recordList"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.IEngine.GetReadyableWeaponList(Eamon.Framework.IMonster)">
            <summary></summary>
            <param name="monster"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.IEngine.GetHostileMonsterList(Eamon.Framework.IMonster)">
            <summary></summary>
            <param name="monster"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.IEngine.GetEmotingMonsterList(Eamon.Framework.IRoom,Eamon.Framework.IMonster,System.Boolean)">
            <summary></summary>
            <param name="room"></param>
            <param name="monster"></param>
            <param name="friendSmile"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.IEngine.BuildLoopWeaponArtifactList(Eamon.Framework.IMonster)">
            <summary></summary>
            <param name="monster"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.IEngine.GetImportedPlayerInventory">
            <summary>
            Gets the original carried/worn inventory brought by the player into the game.
            </summary>
        </member>
        <member name="M:EamonRT.Framework.IEngine.HideImportedPlayerInventory">
            <summary>
            Hides the original carried/worn inventory brought by the player into the game by moving each <see cref="T:Eamon.Framework.IArtifact">Artifact</see> into Limbo.
            </summary>
            <remarks>
            This method is intended to be used with <see cref="M:EamonRT.Framework.IEngine.RestoreImportedPlayerInventory">RestoreImportedPlayerInventory</see> to hide the player's inventory
            when entering the game and then restore it again prior to exiting the game.  It should only be used in <see cref="M:EamonRT.Framework.IMainLoop.Startup">MainLoop.Startup</see>.
            </remarks>
        </member>
        <member name="M:EamonRT.Framework.IEngine.RestoreImportedPlayerInventory">
            <summary>
            Restores the original carried/worn inventory brought by the player into the game by moving each <see cref="T:Eamon.Framework.IArtifact">Artifact</see> back to its initial
            location.
            </summary>
            <remarks>
            This method is intended to be used with <see cref="M:EamonRT.Framework.IEngine.HideImportedPlayerInventory">HideImportedPlayerInventory</see> to hide the player's inventory when
            entering the game and then restore it again prior to exiting the game.  It should only be used in <see cref="M:EamonRT.Framework.IMainLoop.Shutdown">MainLoop.Shutdown</see>.
            </remarks>
        </member>
        <member name="M:EamonRT.Framework.IEngine.BuildCommandList(System.Collections.Generic.IList{EamonRT.Framework.Commands.ICommand},Eamon.Framework.Primitive.Enums.CommandType,System.Text.StringBuilder,System.Boolean@)">
            <summary></summary>
            <param name="commands"></param>
            <param name="cmdType"></param>
            <param name="buf"></param>
            <param name="newSeen"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.IEngine.NormalizePlayerInput(System.Text.StringBuilder)">
            <summary></summary>
            <param name="buf"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.IEngine.ReplacePrepositions(System.Text.StringBuilder)">
            <summary></summary>
            <param name="buf"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.IEngine.IsQuotedStringCommand(EamonRT.Framework.Commands.ICommand)">
            <summary></summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.IEngine.ResurrectDeadBodies(Eamon.Framework.IRoom,System.Func{Eamon.Framework.IArtifact,System.Boolean}[])">
            <summary></summary>
            <param name="room"></param>
            <param name="whereClauseFuncs"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.IEngine.MakeArtifactsVanish(Eamon.Framework.IRoom,System.Func{Eamon.Framework.IArtifact,System.Boolean}[])">
            <summary></summary>
            <param name="room"></param>
            <param name="whereClauseFuncs"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.IEngine.CheckPlayerSpellCast(Eamon.Framework.Primitive.Enums.Spell,System.Boolean)">
            <summary></summary>
            <param name="spellValue"></param>
            <param name="shouldAllowSkillGains"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.IEngine.SaveThrow(Eamon.Framework.Primitive.Enums.Stat,System.Int64)">
            <summary></summary>
            <param name="stat"></param>
            <param name="bonus"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.IEngine.CheckPlayerSkillGains(Eamon.Framework.Primitive.Classes.IArtifactCategory,System.Int64)">
            <summary></summary>
            <param name="ac"></param>
            <param name="af"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.CheckToExtinguishLightSource">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.IEngine.TransportRoomContentsBetweenRooms(Eamon.Framework.IRoom,Eamon.Framework.IRoom,System.Boolean)">
            <summary></summary>
            <param name="oldRoom"></param>
            <param name="newRoom"></param>
            <param name="includeEmbedded"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.TransportPlayerBetweenRooms(Eamon.Framework.IRoom,Eamon.Framework.IRoom,Eamon.Framework.IEffect)">
            <summary></summary>
            <param name="oldRoom"></param>
            <param name="newRoom"></param>
            <param name="effect"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.PrintMacroReplacedPagedString(System.String,System.Text.StringBuilder)">
            <summary></summary>
            <param name="str"></param>
            <param name="buf"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.CreateArtifactSynonyms(System.Int64,System.String[])">
            <summary></summary>
            <param name="artifactUid"></param>
            <param name="synonyms"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.CreateMonsterSynonyms(System.Int64,System.String[])">
            <summary></summary>
            <param name="monsterUid"></param>
            <param name="synonyms"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.GetOddsToHit(Eamon.Framework.IMonster,Eamon.Framework.IMonster,Eamon.Framework.Primitive.Classes.IArtifactCategory,System.Int64,System.Int64@)">
            <summary></summary>
            <param name="ofMonster"></param>
            <param name="dfMonster"></param>
            <param name="ac"></param>
            <param name="af"></param>
            <param name="oddsToHit"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.CreateInitialState(System.Boolean)">
            <summary></summary>
            <param name="printLineSep"></param>
        </member>
        <member name="M:EamonRT.Framework.IEngine.MoveMonsters(System.Func{Eamon.Framework.IMonster,System.Boolean}[])">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.IEngine.RtProcessArgv(System.Boolean,System.Boolean@)">
            <summary></summary>
            <param name="secondPass"></param>
            <param name="nlFlag"></param>
        </member>
        <member name="T:EamonRT.Framework.IIntroStory">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.IIntroStory.Buf">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.IIntroStory.StoryType">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.IIntroStory.ShouldPrintOutput">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.IIntroStory.PrintOutput">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.IMainLoop">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.IMainLoop.Buf">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.IMainLoop.ShouldStartup">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.IMainLoop.ShouldShutdown">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.IMainLoop.ShouldExecute">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.IMainLoop.Startup">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.IMainLoop.Shutdown">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.IMainLoop.Execute">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Parsing.ICommandParser">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ICommandParser.InputBuf">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ICommandParser.LastInputStr">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ICommandParser.LastHimNameStr">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ICommandParser.LastHerNameStr">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ICommandParser.LastItNameStr">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ICommandParser.LastThemNameStr">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ICommandParser.Tokens">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ICommandParser.CurrToken">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ICommandParser.PrepTokenIndex">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ICommandParser.Prep">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ICommandParser.ActorMonster">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ICommandParser.ActorRoom">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ICommandParser.Dobj">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ICommandParser.DobjArtifact">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ICommandParser.DobjMonster">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ICommandParser.Iobj">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ICommandParser.IobjArtifact">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ICommandParser.IobjMonster">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ICommandParser.DobjData">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ICommandParser.IobjData">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ICommandParser.ObjData">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ICommandParser.NextState">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ICommandParser.NextCommand">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Parsing.ICommandParser.PlayerRecordMatch">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Parsing.ICommandParser.PlayerRecordMatch01">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Parsing.ICommandParser.PlayerResolveRecord(System.Boolean,System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Parsing.ICommandParser.PlayerResolveRecordProcessWhereClauseList">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Parsing.ICommandParser.PlayerFinishParsing">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Parsing.ICommandParser.MonsterFinishParsing">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Parsing.ICommandParser.ShouldStripTrailingPunctuation">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.Parsing.ICommandParser.FinishParsing">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Parsing.ICommandParser.GetActiveObjData">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.Parsing.ICommandParser.SetRecord(Eamon.Framework.IGameBase)">
            <summary></summary>
            <param name="record"></param>
        </member>
        <member name="M:EamonRT.Framework.Parsing.ICommandParser.GetRecord">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.Parsing.ICommandParser.Clear">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Parsing.ICommandParser.ParseName">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Parsing.ICommandParser.SetLastNameStrings(Eamon.Framework.IGameBase,System.String,Eamon.Framework.IArtifact,Eamon.Framework.IMonster)">
            <summary></summary>
            <param name="obj"></param>
            <param name="objDataName"></param>
            <param name="artifact"></param>
            <param name="monster"></param>
        </member>
        <member name="M:EamonRT.Framework.Parsing.ICommandParser.CheckPlayerCommand(System.Boolean)">
            <summary></summary>
            <param name="afterFinishParsing"></param>
        </member>
        <member name="M:EamonRT.Framework.Parsing.ICommandParser.Execute">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Parsing.IParserData">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.IParserData.Name">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.IParserData.QueryDescFunc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.IParserData.Obj">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.IParserData.Artifact">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.IParserData.Monster">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.IParserData.GetRecordList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.IParserData.FilterRecordList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.IParserData.RecordWhereClauseList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.IParserData.GetRecordListFunc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.IParserData.FilterRecordListFunc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.IParserData.RevealEmbeddedArtifactFunc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.IParserData.RecordMatchFunc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.IParserData.RecordNotFoundFunc">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Parsing.ISentenceParser">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ISentenceParser.InputBuf">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ISentenceParser.LastInputStr">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ISentenceParser.ParserInputStrList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Parsing.ISentenceParser.ParserInputStr">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Parsing.ISentenceParser.PrintDiscardingCommands">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Parsing.ISentenceParser.Clear">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Parsing.ISentenceParser.ReplacePronounsAndProcessDobjNameList">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.Parsing.ISentenceParser.Execute">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Plugin.IPluginClassMappings">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Plugin.IPluginConstants">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginConstants.StartRoom">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginConstants.NumSaveSlots">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginConstants.ScaledHardinessUnarmedMaxDamage">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginConstants.ScaledHardinessMaxDamageDivisor">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginConstants.CommandPrompt">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginConstants.PageSep">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginConstants.RtProgVersion">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Plugin.IPluginGlobals">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.Buf01">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.Buf02">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.CommandList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.LastCommandList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.LoopMonsterUid">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.LoopMemberNumber">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.LoopAttackNumber">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.LoopGroupCount">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.LoopFailedMoveMemberCount">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.LoopLastDfMonster">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.Engine">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.IntroStory">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.MainLoop">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.SentenceParser">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.CommandParser">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.CurrState">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.NextState">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.GameState">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.Character">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.ExitType">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.CommandPrompt">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.CurrCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.NextCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.LastCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.CommandPromptSeen">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.PlayerMoved">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.GameRunning">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.DeleteGameStateAfterLoop">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.StartOver">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.ErrorExit">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.ExportCharacterGoToMainHall">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.ExportCharacter">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.Plugin.IPluginGlobals.DeleteCharacter">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Primitive.Enums.AttackResult">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.AttackResult.None">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.AttackResult.Fumble">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.AttackResult.Miss">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.AttackResult.Hit">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.AttackResult.CriticalHit">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Primitive.Enums.CombatState">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.CombatState.None">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.CombatState.BeginAttack">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.CombatState.AttackMiss">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.CombatState.AttackFumble">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.CombatState.AttackHit">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.CombatState.CalculateDamage">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.CombatState.CheckArmor">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.CombatState.CheckMonsterStatus">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.CombatState.EndAttack">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.CombatState.User1">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.CombatState.User2">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.CombatState.User3">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Primitive.Enums.EventType">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.AfterRoundEnd">
            <summary>
            An event that fires at the end of the current round, after all processing has been done.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.BeforeRoundStart">
            <summary>
            An event that fires at the start of a new round, before any processing has been done.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.AfterExtinguishLightSourceCheck">
            <summary>
            An event that fires after the player has moved to a new <see cref="T:Eamon.Framework.IRoom">Room</see>, and any carried light
            source has been extinguished (if necessary).
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.AfterMoveMonsters">
            <summary>
            An event that fires after the player has moved to a new <see cref="T:Eamon.Framework.IRoom">Room</see>, and any <see cref="T:Eamon.Framework.IMonster">Monster</see>s
            in the exited Room (friendly or hostile) have followed.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.AfterDestinationRoomSet">
            <summary>
            An event that fires after the player's destination <see cref="T:Eamon.Framework.IRoom">Room</see> <see cref="P:Eamon.Framework.IGameBase.Uid"> Uid</see>
            is calculated and stored.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.BeforeCommandPromptPrint">
            <summary>
            An event that fires before the player's command prompt is printed.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.BeforeCanMoveToRoomCheck">
            <summary>
            An event that fires before it is known whether the player can move to a <see cref="T:Eamon.Framework.IRoom">Room</see>.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.AfterBlockingArtifactCheck">
            <summary>
            An event that fires after it is known whether a blocking <see cref="T:Eamon.Framework.IArtifact">Artifact</see> (for example,
            a door) prevents the player's movement.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.BeforePlayerRoomPrint">
            <summary>
            An event that fires before the player's <see cref="T:Eamon.Framework.IRoom">Room</see> has been printed.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.AfterLastCommandListClear">
            <summary>
            An event that fires after the player's command has been processed (but not executed)
            and the <see cref="!:IPluginGlobals.LastCommandList">LastCommandList</see> cleared.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.AfterPlayerSpellCastCheck">
            <summary>
            An event that fires after the player's spell cast attempt has resolved as successful.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.AfterMonsterGetsAggravated">
            <summary>
            An event that fires after the <see cref="T:Eamon.Framework.IMonster">Monster</see> targeted by the <see cref="F:Eamon.Framework.Primitive.Enums.Spell.Blast">Blast</see>
            spell gets aggravated.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.BeforeGuardMonsterCheck">
            <summary>
            An event that fires before a guard <see cref="T:Eamon.Framework.IMonster">Monster</see> prevents a bound Monster from being freed.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.BeforeKeyArtifactCheck">
            <summary>
            An event that fires before a key <see cref="T:Eamon.Framework.IArtifact">Artifact</see> prevents a bound Monster from being freed.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.AfterEnforceMonsterWeightLimitsCheck">
            <summary>
            An event that fires after limits are enforced on the weight a <see cref="T:Eamon.Framework.IMonster">Monster</see> can carry.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.AfterPlayerGivesReadiedWeaponCheck">
            <summary>
            An event that fires after checking whether the player is giving away a readied weapon.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.BeforeMonsterTakesGold">
            <summary>
            An event that fires before a <see cref="T:Eamon.Framework.IMonster">Monster</see> takes the gold offered by the player.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.AfterArtifactClose">
            <summary>
            An event that fires after the player closes an <see cref="T:Eamon.Framework.IArtifact">Artifact</see>.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.BeforeArtifactNowEmptyCheck">
            <summary>
            An event that fires before checking whether an <see cref="T:Eamon.Framework.IArtifact">Artifact</see> has been fully drunk.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.AfterArtifactDrink">
            <summary>
            An event that fires after the player drinks an <see cref="T:Eamon.Framework.IArtifact">Artifact</see>.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.AfterArtifactEat">
            <summary>
            An event that fires after the player eats an <see cref="T:Eamon.Framework.IArtifact">Artifact</see>.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.AfterArtifactFullDescPrint">
            <summary>
            An event that fires after an <see cref="T:Eamon.Framework.IArtifact">Artifact</see>'s full description has been printed (but before
            units are listed for drinkables/edibles).
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.AfterArtifactContentsPrint">
            <summary>
            An event that fires after an <see cref="T:Eamon.Framework.IArtifact">Artifact</see>'s container contents are printed.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.AfterArtifactOpenPrint">
            <summary>
            An event that fires after an <see cref="T:Eamon.Framework.IArtifact">Artifact</see>'s open message has been printed (but before
            inventory is listed for containers).
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.AfterArtifactOpen">
            <summary>
            An event that fires after the player opens an <see cref="T:Eamon.Framework.IArtifact">Artifact</see>.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.AfterArtifactPut">
            <summary>
            An event that fires after the player puts an <see cref="T:Eamon.Framework.IArtifact">Artifact</see> into a container.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.BeforeArtifactReadTextPrint">
            <summary>
            An event that fires before an <see cref="T:Eamon.Framework.IArtifact">Artifact</see>'s read text is printed.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.AfterArtifactRead">
            <summary>
            An event that fires after the player reads an <see cref="T:Eamon.Framework.IArtifact">Artifact</see>.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.AfterWornArtifactRemove">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.BeforeArtifactUse">
            <summary>
            An event that fires before the player uses an <see cref="T:Eamon.Framework.IArtifact">Artifact</see>.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.AfterArtifactWear">
            <summary>
            An event that fires after the player wears an <see cref="T:Eamon.Framework.IArtifact">Artifact</see>.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.BeforePlayerSayTextPrint">
            <summary>
            An event that fires before the player's spoken text is printed.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.AfterPlayerSay">
            <summary>
            An event that fires after the player says something.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.AfterPlayerStatus">
            <summary>
            An event that fires after the player's status text has been printed.
            </summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.EventType.AfterNumberOfExitsCheck">
            <summary>
            An event that fires after checking whether exits are available for fleeing, and it resolves that there are.
            </summary>
        </member>
        <member name="T:EamonRT.Framework.Primitive.Enums.IntroStoryType">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.IntroStoryType.Default">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.IntroStoryType.Beginners">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.Primitive.Enums.WeaponRevealType">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.WeaponRevealType.Never">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.WeaponRevealType.Always">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Framework.Primitive.Enums.WeaponRevealType.OnlyIfSeen">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IBurnDownLightSourceState">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IBurnDownSpeedSpellState">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IEndOfRoundState">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IErrorState">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.States.IErrorState.ErrorCode">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.States.IErrorState.ErrorMessage">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IRegenerateSpellAbilitiesState">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IStartState">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IUnrecognizedCommandState">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IState">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IStateImpl">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.States.IStateImpl.State">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IStateSignatures">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.States.IStateSignatures.Uid">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.States.IStateSignatures.GotoCleanup">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.States.IStateSignatures.Name">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.States.IStateSignatures.NextState">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.States.IStateSignatures.PreserveNextState">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.States.IStateSignatures.PrintObjBlocksTheWay(Eamon.Framework.IArtifact)">
            <summary></summary>
            <param name="artifact"></param>
        </member>
        <member name="M:EamonRT.Framework.States.IStateSignatures.PrintDontFollowYou">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.States.IStateSignatures.PrintDontFollowYou02">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.States.IStateSignatures.PrintCantGoThatWay">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.States.IStateSignatures.PrintCantVerbThere(System.String)">
            <summary></summary>
            <param name="verb"></param>
        </member>
        <member name="M:EamonRT.Framework.States.IStateSignatures.PrintRideOffIntoSunset">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.States.IStateSignatures.PrintEnemiesNearby">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.States.IStateSignatures.ProcessEvents(EamonRT.Framework.Primitive.Enums.EventType)">
            <summary></summary>
            <param name="eventType"></param>
        </member>
        <member name="M:EamonRT.Framework.States.IStateSignatures.ProcessRevealContentArtifactList(System.Boolean)">
            <summary></summary>
            <param name="printOutput"></param>
        </member>
        <member name="M:EamonRT.Framework.States.IStateSignatures.GetDarkName(Eamon.Framework.IGameBase,Eamon.Framework.Primitive.Enums.ArticleType,System.String,System.Boolean,System.Boolean)">
            <summary></summary>
            <param name="target"></param>
            <param name="articleType"></param>
            <param name="nameType"></param>
            <param name="upshift"></param>
            <param name="groupCountOne"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.States.IStateSignatures.ShouldPreTurnProcess">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Framework.States.IStateSignatures.Execute">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IMonsterActionState">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IMonsterAttackActionState">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IMonsterAttackLoopIncrementState">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IMonsterAttackLoopInitializeState">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IMonsterLoopIncrementState">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IMonsterLoopInitializeState">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IMonsterMemberActionState">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IMonsterMemberLoopIncrementState">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IMonsterMemberLoopInitializeState">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IMonsterStartState">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IAfterPlayerMoveState">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.States.IAfterPlayerMoveState.Direction">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.States.IAfterPlayerMoveState.DoorGateArtifact">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.States.IAfterPlayerMoveState.MoveMonsters">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IAfterPrintPlayerRoomEventState">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.States.IAfterPrintPlayerRoomEventState.ExitEventLoop">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.States.IAfterPrintPlayerRoomEventState.FireEvent(System.String,System.Object)">
            <summary></summary>
            <param name="eventName"></param>
            <param name="eventParam"></param>
        </member>
        <member name="M:EamonRT.Framework.States.IAfterPrintPlayerRoomEventState.FireEvent02(Eamon.Game.Utilities.EventData)">
            <summary></summary>
            <param name="eventData"></param>
        </member>
        <member name="T:EamonRT.Framework.States.IBeforePlayerMoveState">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.States.IBeforePlayerMoveState.Direction">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.States.IBeforePlayerMoveState.DoorGateArtifact">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IBeforePrintPlayerRoomEventState">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.States.IBeforePrintPlayerRoomEventState.ExitEventLoop">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Framework.States.IBeforePrintPlayerRoomEventState.FireEvent(System.String,System.Object)">
            <summary></summary>
            <param name="eventName"></param>
            <param name="eventParam"></param>
        </member>
        <member name="M:EamonRT.Framework.States.IBeforePrintPlayerRoomEventState.FireEvent02(Eamon.Game.Utilities.EventData)">
            <summary></summary>
            <param name="eventData"></param>
        </member>
        <member name="T:EamonRT.Framework.States.IGetPlayerInputState">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.States.IGetPlayerInputState.RestartCommand">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IPlayerDeadState">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.States.IPlayerDeadState.PrintLineSep">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IPlayerMoveCheckState">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.States.IPlayerMoveCheckState.Direction">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.States.IPlayerMoveCheckState.DoorGateArtifact">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Framework.States.IPlayerMoveCheckState.Fleeing">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IPrintPlayerRoomState">
            <summary></summary>
        </member>
        <member name="T:EamonRT.Framework.States.IProcessPlayerInputState">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Game.Combat.CombatSystem._odds">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Game.Combat.CombatSystem._rl">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Game.Combat.CombatSystem._d2">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.CombatState">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.OfAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.DfAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.ArAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.WpnArtifact">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.OfWeapon">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.DfWeapon">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.DfArmor">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.OfWeaponType">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.DfWeaponType">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.OfMonsterName">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.DfMonsterName">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.AttackDesc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.AttackDesc01">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.MissDesc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.UseFractionalStrength">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.OmitBboaPadding">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.LightOut">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.OfWeaponUid">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.DfWeaponUid">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.D">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.S">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.M">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.A">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.Af">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Combat.CombatSystem.S2">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.SetAttackDesc">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.PrintAttack">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.PrintMiss">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.PrintFumble">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.PrintRecovered">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.PrintWeaponDropped">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.PrintWeaponHitsUser">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.PrintSparksFly">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.PrintWeaponDamaged">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.PrintWeaponBroken">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.PrintBrokenWeaponHitsUser">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.PrintStarPlus">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.PrintHit">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.PrintCriticalHit">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.PrintBlowTurned">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.PrintHealthStatus">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.PrintBlast">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.RollToHitOrMiss">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.BeginAttack">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.AttackMiss">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.AttackFumble">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.AttackHit">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.CalculateDamageForFractionalStrength">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.CalculateDamage">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.CheckArmor">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.CheckMonsterStatus">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Combat.CombatSystem.ExecuteStateMachine">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.AttackCommand.SpilledArtifactList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.AttackCommand.DobjArtAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.AttackCommand.ActorWeaponAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.AttackCommand.DisguisedMonster">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.AttackCommand.ActorWeapon">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.AttackCommand.RedirectCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.AttackCommand.PlayerCombatSystem">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.AttackCommand.MonsterCombatSystem">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.AttackCommand.KeyArtifactUid">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.AttackCommand.BreakageStrength">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.AttackCommand.BreakageDice">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.AttackCommand.BreakageSides">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.AttackCommand.BreakageDamage">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.FreeCommand.DobjArtAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.FreeCommand.BoundMonster">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.FreeCommand.GuardMonster">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.FreeCommand.KeyArtifact">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.FreeCommand.BoundMonsterUid">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.FreeCommand.GuardMonsterUid">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.FreeCommand.KeyArtifactUid">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GiveCommand.DobjArtAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GiveCommand.IobjMonsterName">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GiveCommand.DobjArtifactCount">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GiveCommand.DobjArtifactWeight">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GiveCommand.IobjMonsterInventoryWeight">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.HealCommand.IsCharMonster">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.HealCommand.DamageHealed">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.SmileCommand.SmilingMonsterList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.WaveCommand.WavingMonsterList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.CloseCommand.InContainerAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.CloseCommand.DoorGateAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.CloseCommand.DrinkableAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.CloseCommand.EdibleAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.CloseCommand.ReadableAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.CloseCommand.DobjArtAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.DrinkCommand.DrinkableAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.DrinkCommand.EdibleAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.DrinkCommand.DobjArtAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.DropCommand.DroppedArtifactList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.DropCommand.LsArtifact">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.EatCommand.DrinkableAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.EatCommand.EdibleAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.EatCommand.DobjArtAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.ExamineCommand.ArtTypes">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.ExamineCommand.ContainerArtifactList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.ExamineCommand.DobjArtAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.ExamineCommand.DobjArtContainerAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.ExamineCommand.ContainerArtType">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.ExamineCommand.RedirectCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.ExamineCommand.RedirectCommand01">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.ExamineCommand.ShowCharOwned">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.ExamineCommand.IsUninjuredGroupMonster">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GetCommand.PlayerArtTypes">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GetCommand.MonsterArtTypes">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GetCommand.PlayerFumbleMonsterList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GetCommand.MonsterFumbleMonsterList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GetCommand.TakenArtifactList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GetCommand.PlayerDobjArtAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GetCommand.MonsterDobjArtAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GetCommand.WeaponArtifactAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GetCommand.WeaponAffinityMonster">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GetCommand.WeaponArtifact">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GetCommand.RedirectCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GetCommand.MonsterName">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GetCommand.PlayerDobjArtifactCount">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GetCommand.PlayerDobjArtifactWeight">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GetCommand.PlayerActorMonsterInventoryWeight">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GetCommand.MonsterDobjArtifactCount">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GetCommand.MonsterDobjArtifactWeight">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GetCommand.MonsterActorMonsterInventoryWeight">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GetCommand.OmitWeightCheck">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GetCommand.IsCarriedByContainer">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GetCommand.NewlineFlag">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.LightCommand.DobjArtAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.LightCommand.LsArtifact">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.OpenCommand.OnContainerArtifactList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.OpenCommand.InContainerAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.OpenCommand.DoorGateAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.OpenCommand.DisguisedMonsterAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.OpenCommand.DrinkableAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.OpenCommand.EdibleAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.OpenCommand.ReadableAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.OpenCommand.DobjArtAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.OpenCommand.KeyArtifact">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.OpenCommand.KeyArtifactUid">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.PutCommand.DobjAllContainerArtifactList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.PutCommand.IobjArtAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.PutCommand.IobjArtifactCount">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.PutCommand.IobjArtifactWeight">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.PutCommand.MaxItemsReached">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.ReadCommand.DobjArtAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.ReadCommand.ReadEffect">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.ReadCommand.ReadEffectIndex">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.ReadyCommand.DobjArtAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.ReadyCommand.ShieldArtifact">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.ReadyCommand.PlayerActorWeapon">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.ReadyCommand.MonsterActorWeapon">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.ReadyCommand.MonsterName">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.RemoveCommand.ArtTypes">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.RemoveCommand.FumbleMonsterList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.RemoveCommand.DobjArtAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.RemoveCommand.ArmorArtifactAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.RemoveCommand.ShieldArtifactAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.RemoveCommand.ArmorArtifact">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.RemoveCommand.ShieldArtifact">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.RemoveCommand.MonsterName">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.RemoveCommand.DobjArtifactCount">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.RemoveCommand.DobjArtifactWeight">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.RemoveCommand.ActorMonsterInventoryWeight">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.RemoveCommand.OmitWeightCheck">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.UseCommand.DobjArtAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.WearCommand.DobjArtAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.WearCommand.ArmorArtifactAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.WearCommand.ShieldArtifactAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.WearCommand.WeaponArtifactAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.WearCommand.ArmorArtifact">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.WearCommand.ShieldArtifact">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.WearCommand.WeaponArtifact">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.HintsCommand.ActiveHintList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.HintsCommand.ActiveHintListIndex">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.HintsCommand.HintAnswerIndex">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.InventoryCommand.DobjArtContainedArtifactList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.InventoryCommand.DobjMonsterWornArtifactList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.InventoryCommand.DobjMonsterCarriedArtifactList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.InventoryCommand.DobjArtAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.InventoryCommand.GoldArtifact">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.InventoryCommand.DobjArtContainerType">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.InventoryCommand.TotalGold">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.InventoryCommand.ShowCharOwned">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.InventoryCommand.IsCharMonster">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.InventoryCommand.HasWornInventory">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.InventoryCommand.HasCarriedInventory">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.InventoryCommand.ShouldShowHealthStatusWhenInventoried">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.InventoryCommand.IsUninjuredGroup">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.PowerCommand.RedirectCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.PowerCommand.PowerEventRoll">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.PowerCommand.FortuneCookieRoll">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.RestoreCommand.FullArtifactList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.RestoreCommand.FullMonsterList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.RestoreCommand.SaveFilesetList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.RestoreCommand.SaveFileset">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.RestoreCommand.SaveConfig">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.RestoreCommand.CharacterRoom">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.RestoreCommand.OrigCurrState">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.RestoreCommand.SaveFilesetsCount">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.SaveCommand.FullArtifactList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.SaveCommand.SaveFilesetList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.SaveCommand.SaveFileset">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.SaveCommand.SaveConfig">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.SaveCommand.SaveSlotString">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.SaveCommand.SaveFilePath">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.SaveCommand.SaveFileName">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.SaveCommand.SaveFileExtension">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.SaveCommand.SaveFilesetsCount">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.SaveCommand.SaveFileNameIndex">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.SaveCommand.GameSaved">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.SpeedCommand.SpeedTurns">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.StatusCommand.ArmorArtifactUids">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.StatusCommand.StatDisplayArgs">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.StatusCommand.ArmorArtifactAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.StatusCommand.ArmorArtifact">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.StatusCommand.CharArmor">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.StatusCommand.CharArmorClass">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.StatusCommand.CharInventoryWeight">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.FleeCommand.NumExits">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.FleeCommand.RandomDirection">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Commands.GoCommand.DobjArtAc">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Engine.ConvertWeaponsToArtifacts">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Game.Engine.ConvertArmorToArtifacts">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Game.Engine.PrintTooManyWeapons">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Engine.PrintDeliverGoods">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Engine.PrintGoodsPayment(System.Boolean,System.Int64)">
            <summary></summary>
            <param name="goodsExist"></param>
            <param name="payment"></param>
        </member>
        <member name="M:EamonRT.Game.Engine.SetScaledHardiness(Eamon.Framework.IMonster,System.Int64)">
            <summary></summary>
            <param name="monster"></param>
            <param name="damageFactor"></param>
        </member>
        <member name="M:EamonRT.Game.Engine.PlayerSpellCastBrainOverload(Eamon.Framework.Primitive.Enums.Spell,Eamon.Framework.Primitive.Classes.ISpell)">
            <summary></summary>
            <param name="s"></param>
            <param name="spell"></param>
        </member>
        <member name="M:EamonRT.Game.IntroStory.IsCharWpnNum(System.Char)">
            <summary></summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Game.IntroStory.PrintOutputBeginnersPrelude">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.IntroStory.PrintOutputBeginnersTooManyWeapons">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.IntroStory.PrintOutputBeginnersNoWeapons">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.IntroStory.PrintOutputBeginnersNotABeginner">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.IntroStory.PrintOutputBeginnersMayNowProceed">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.IntroStory.PrintOutputBeginners">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.IntroStory.PrintOutputDefault">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Parsing.SentenceParser.TokenCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Parsing.SentenceParser.CurrInputStr">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Parsing.SentenceParser.OrigInputStr">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Parsing.SentenceParser.DobjNameStr">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Parsing.SentenceParser.IobjNameStr">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Parsing.SentenceParser.CommandFormatStr">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Parsing.SentenceParser.NewCommandStr">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Parsing.SentenceParser.Tokens">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Parsing.SentenceParser.DobjNameTokens">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Parsing.SentenceParser.NumDobjNameTokens">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Parsing.SentenceParser.IobjNameTokens">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Parsing.SentenceParser.NumIobjNameTokens">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Parsing.SentenceParser.CurrToken">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Parsing.SentenceParser.StartToken">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Parsing.SentenceParser.CurrIndex">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Parsing.SentenceParser.RemoveIndex">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Parsing.SentenceParser.NameIndex">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Parsing.SentenceParser.PrepTokenIndex">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.Parsing.SentenceParser.LoopCounter">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Game.Parsing.SentenceParser.IsValidTokenCommandMatch">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.BurnDownLightSourceState.LsArtAc">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.BurnDownLightSourceState.LsArtifact">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.BurnDownLightSourceState.LsArtifactUid">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.BurnDownSpeedSpellState.AgilityStat">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.BurnDownSpeedSpellState.PrintSpellExpiredRoll">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.EndOfRoundState.ResetMonsterList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.RegenerateSpellAbilitiesState.SpellValueList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.RegenerateSpellAbilitiesState.SpellIncrement">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.UnrecognizedCommandState.EnabledCommandList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.UnrecognizedCommandState.CharMonster">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.UnrecognizedCommandState.NewSeen">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.MonsterActionState.LoopMonster">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.MonsterActionState.LoopMonsterRoom">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.MonsterActionState.ActionCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.MonsterAttackActionState.HostileMonsterList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.MonsterAttackActionState.LoopMonster">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.MonsterAttackActionState.LoopMonsterRoom">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.MonsterAttackActionState.ActionCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.MonsterAttackActionState.HostileMonsterListIndex">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.MonsterAttackLoopIncrementState.LoopMonster">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.MonsterAttackLoopIncrementState.MaxMemberAttackCount">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.MonsterAttackLoopInitializeState.LoopMonster">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.MonsterLoopIncrementState.FailedMoveMonster">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.MonsterLoopIncrementState.LoopMonster">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Game.States.MonsterMemberActionState._spellCast">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Game.States.MonsterMemberActionState._spellTarget">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.MonsterMemberActionState.LoopMonster">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.MonsterMemberActionState.LoopMonsterRoom">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.MonsterMemberActionState.WeaponArtifact">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.MonsterMemberActionState.WeaponArtifactList">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.MonsterMemberActionState.MonsterSpell">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.MonsterMemberActionState.ActionCommand">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.MonsterMemberActionState.WeaponArtifactListIndex">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.MonsterMemberActionState.WeaponContainerType">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.MonsterMemberActionState.ContainerPrepName">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.MonsterMemberLoopIncrementState.LoopMonster">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.MonsterMemberLoopIncrementState.MaxMemberActionCount">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.MonsterMemberLoopInitializeState.LoopMonster">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.AfterPlayerMoveState.NewRoom">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.AfterPlayerMoveState.LsArtifact">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.AfterPrintPlayerRoomEventState.EventMethodName">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.AfterPrintPlayerRoomEventState.EventMethodInfo">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.AfterPrintPlayerRoomEventState.EventTurn">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.AfterPrintPlayerRoomEventState.EventData">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.BeforePlayerMoveState.OldRoom">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.BeforePrintPlayerRoomEventState.EventMethodName">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.BeforePrintPlayerRoomEventState.EventMethodInfo">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.BeforePrintPlayerRoomEventState.EventTurn">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.BeforePrintPlayerRoomEventState.EventData">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.GetPlayerInputState.ParsingSuccessful">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.PlayerDeadState.RestoreGame">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.PlayerMoveCheckState.OldRoom">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.PlayerMoveCheckState.BlockingArtifact">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Game.States.PlayerMoveCheckState.DoorGateArtifactUid">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Program._ddfnFlag">
            <summary></summary>
        </member>
        <member name="F:EamonRT.Program._nlFlag">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Program.ProgramName">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Program.ConstantsType">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Program.ClassMappingsType">
            <summary></summary>
        </member>
        <member name="P:EamonRT.Program.GlobalsType">
            <summary></summary>
        </member>
        <member name="M:EamonRT.Program.DdMain(System.String[])">
            <summary></summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:EamonRT.Program.RtMain(System.String[])">
            <summary></summary>
            <param name="args"></param>
            <returns></returns>
        </member>
    </members>
</doc>
